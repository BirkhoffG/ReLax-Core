# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/ReLax-Core',
                'doc_host': 'https://birkhoffg.github.io',
                'git_url': 'https://github.com/birkhoffg/ReLax-Core',
                'lib_path': 'relax'},
  'syms': { 'relax.base': { 'relax.base.BaseConfig': ('base.html#baseconfig', 'relax/base.py'),
                            'relax.base.BaseConfig.load_from_json': ('base.html#baseconfig.load_from_json', 'relax/base.py'),
                            'relax.base.BaseConfig.save': ('base.html#baseconfig.save', 'relax/base.py'),
                            'relax.base.BaseModule': ('base.html#basemodule', 'relax/base.py'),
                            'relax.base.BaseModule.__init__': ('base.html#basemodule.__init__', 'relax/base.py'),
                            'relax.base.BaseModule.load_from_path': ('base.html#basemodule.load_from_path', 'relax/base.py'),
                            'relax.base.BaseModule.name': ('base.html#basemodule.name', 'relax/base.py'),
                            'relax.base.BaseModule.save': ('base.html#basemodule.save', 'relax/base.py'),
                            'relax.base.PredFnMixedin': ('base.html#predfnmixedin', 'relax/base.py'),
                            'relax.base.PredFnMixedin.pred_fn': ('base.html#predfnmixedin.pred_fn', 'relax/base.py'),
                            'relax.base.TrainableMixedin': ('base.html#trainablemixedin', 'relax/base.py'),
                            'relax.base.TrainableMixedin.is_trained': ('base.html#trainablemixedin.is_trained', 'relax/base.py'),
                            'relax.base.TrainableMixedin.train': ('base.html#trainablemixedin.train', 'relax/base.py')},
            'relax.data_module': { 'relax.data_module.BaseDataModule': ('data.html#basedatamodule', 'relax/data_module.py'),
                                   'relax.data_module.BaseDataModule.apply_constraints': ( 'data.html#basedatamodule.apply_constraints',
                                                                                           'relax/data_module.py'),
                                   'relax.data_module.BaseDataModule.apply_regularization': ( 'data.html#basedatamodule.apply_regularization',
                                                                                              'relax/data_module.py'),
                                   'relax.data_module.BaseDataModule.prepare': ('data.html#basedatamodule.prepare', 'relax/data_module.py'),
                                   'relax.data_module.DataModule': ('data.html#datamodule', 'relax/data_module.py'),
                                   'relax.data_module.DataModule.__getitem__': ('data.html#datamodule.__getitem__', 'relax/data_module.py'),
                                   'relax.data_module.DataModule.__init__': ('data.html#datamodule.__init__', 'relax/data_module.py'),
                                   'relax.data_module.DataModule._get_data': ('data.html#datamodule._get_data', 'relax/data_module.py'),
                                   'relax.data_module.DataModule.apply_constraints': ( 'data.html#datamodule.apply_constraints',
                                                                                       'relax/data_module.py'),
                                   'relax.data_module.DataModule.convert_to_features': ( 'data.html#datamodule.convert_to_features',
                                                                                         'relax/data_module.py'),
                                   'relax.data_module.DataModule.convert_to_label': ( 'data.html#datamodule.convert_to_label',
                                                                                      'relax/data_module.py'),
                                   'relax.data_module.DataModule.data': ('data.html#datamodule.data', 'relax/data_module.py'),
                                   'relax.data_module.DataModule.dataset': ('data.html#datamodule.dataset', 'relax/data_module.py'),
                                   'relax.data_module.DataModule.load_from_path': ( 'data.html#datamodule.load_from_path',
                                                                                    'relax/data_module.py'),
                                   'relax.data_module.DataModule.prepare': ('data.html#datamodule.prepare', 'relax/data_module.py'),
                                   'relax.data_module.DataModule.save': ('data.html#datamodule.save', 'relax/data_module.py'),
                                   'relax.data_module.DataModule.xs': ('data.html#datamodule.xs', 'relax/data_module.py'),
                                   'relax.data_module.DataModule.ys': ('data.html#datamodule.ys', 'relax/data_module.py'),
                                   'relax.data_module.DataModuleConfig': ('data.html#datamoduleconfig', 'relax/data_module.py'),
                                   'relax.data_module.DataModuleConfig.shuffle': ( 'data.html#datamoduleconfig.shuffle',
                                                                                   'relax/data_module.py'),
                                   'relax.data_module._validate_dataname': ('data.html#_validate_dataname', 'relax/data_module.py'),
                                   'relax.data_module.download_data_module_files': ( 'data.html#download_data_module_files',
                                                                                     'relax/data_module.py'),
                                   'relax.data_module.load_data': ('data.html#load_data', 'relax/data_module.py')},
            'relax.data_utils': { 'relax.data_utils.DataPreprocessor': ('data.utils.html#datapreprocessor', 'relax/data_utils.py'),
                                  'relax.data_utils.DataPreprocessor.fit': ('data.utils.html#datapreprocessor.fit', 'relax/data_utils.py'),
                                  'relax.data_utils.DataPreprocessor.fit_transform': ( 'data.utils.html#datapreprocessor.fit_transform',
                                                                                       'relax/data_utils.py'),
                                  'relax.data_utils.DataPreprocessor.from_dict': ( 'data.utils.html#datapreprocessor.from_dict',
                                                                                   'relax/data_utils.py'),
                                  'relax.data_utils.DataPreprocessor.inverse_transform': ( 'data.utils.html#datapreprocessor.inverse_transform',
                                                                                           'relax/data_utils.py'),
                                  'relax.data_utils.DataPreprocessor.to_dict': ( 'data.utils.html#datapreprocessor.to_dict',
                                                                                 'relax/data_utils.py'),
                                  'relax.data_utils.DataPreprocessor.transform': ( 'data.utils.html#datapreprocessor.transform',
                                                                                   'relax/data_utils.py'),
                                  'relax.data_utils.EncoderPreprocessor': ('data.utils.html#encoderpreprocessor', 'relax/data_utils.py'),
                                  'relax.data_utils.EncoderPreprocessor._fit': ( 'data.utils.html#encoderpreprocessor._fit',
                                                                                 'relax/data_utils.py'),
                                  'relax.data_utils.EncoderPreprocessor._inverse_transform': ( 'data.utils.html#encoderpreprocessor._inverse_transform',
                                                                                               'relax/data_utils.py'),
                                  'relax.data_utils.EncoderPreprocessor._transform': ( 'data.utils.html#encoderpreprocessor._transform',
                                                                                       'relax/data_utils.py'),
                                  'relax.data_utils.EncoderPreprocessor.from_dict': ( 'data.utils.html#encoderpreprocessor.from_dict',
                                                                                      'relax/data_utils.py'),
                                  'relax.data_utils.EncoderPreprocessor.to_dict': ( 'data.utils.html#encoderpreprocessor.to_dict',
                                                                                    'relax/data_utils.py'),
                                  'relax.data_utils.Feature': ('data.utils.html#feature', 'relax/data_utils.py'),
                                  'relax.data_utils.Feature.__get_item__': ('data.utils.html#feature.__get_item__', 'relax/data_utils.py'),
                                  'relax.data_utils.Feature.__init__': ('data.utils.html#feature.__init__', 'relax/data_utils.py'),
                                  'relax.data_utils.Feature.__repr__': ('data.utils.html#feature.__repr__', 'relax/data_utils.py'),
                                  'relax.data_utils.Feature.apply_constraints': ( 'data.utils.html#feature.apply_constraints',
                                                                                  'relax/data_utils.py'),
                                  'relax.data_utils.Feature.fit': ('data.utils.html#feature.fit', 'relax/data_utils.py'),
                                  'relax.data_utils.Feature.fit_transform': ( 'data.utils.html#feature.fit_transform',
                                                                              'relax/data_utils.py'),
                                  'relax.data_utils.Feature.from_dict': ('data.utils.html#feature.from_dict', 'relax/data_utils.py'),
                                  'relax.data_utils.Feature.inverse_transform': ( 'data.utils.html#feature.inverse_transform',
                                                                                  'relax/data_utils.py'),
                                  'relax.data_utils.Feature.to_dict': ('data.utils.html#feature.to_dict', 'relax/data_utils.py'),
                                  'relax.data_utils.Feature.transform': ('data.utils.html#feature.transform', 'relax/data_utils.py'),
                                  'relax.data_utils.Feature.transformed_data': ( 'data.utils.html#feature.transformed_data',
                                                                                 'relax/data_utils.py'),
                                  'relax.data_utils.FeaturesList': ('data.utils.html#featureslist', 'relax/data_utils.py'),
                                  'relax.data_utils.FeaturesList.__init__': ( 'data.utils.html#featureslist.__init__',
                                                                              'relax/data_utils.py'),
                                  'relax.data_utils.FeaturesList._transform_data': ( 'data.utils.html#featureslist._transform_data',
                                                                                     'relax/data_utils.py'),
                                  'relax.data_utils.FeaturesList.apply_constraints': ( 'data.utils.html#featureslist.apply_constraints',
                                                                                       'relax/data_utils.py'),
                                  'relax.data_utils.FeaturesList.feature_indices': ( 'data.utils.html#featureslist.feature_indices',
                                                                                     'relax/data_utils.py'),
                                  'relax.data_utils.FeaturesList.features': ( 'data.utils.html#featureslist.features',
                                                                              'relax/data_utils.py'),
                                  'relax.data_utils.FeaturesList.from_dict': ( 'data.utils.html#featureslist.from_dict',
                                                                               'relax/data_utils.py'),
                                  'relax.data_utils.FeaturesList.inverse_transform': ( 'data.utils.html#featureslist.inverse_transform',
                                                                                       'relax/data_utils.py'),
                                  'relax.data_utils.FeaturesList.load_from_path': ( 'data.utils.html#featureslist.load_from_path',
                                                                                    'relax/data_utils.py'),
                                  'relax.data_utils.FeaturesList.save': ('data.utils.html#featureslist.save', 'relax/data_utils.py'),
                                  'relax.data_utils.FeaturesList.to_dict': ('data.utils.html#featureslist.to_dict', 'relax/data_utils.py'),
                                  'relax.data_utils.FeaturesList.transform': ( 'data.utils.html#featureslist.transform',
                                                                               'relax/data_utils.py'),
                                  'relax.data_utils.FeaturesList.transformed_data': ( 'data.utils.html#featureslist.transformed_data',
                                                                                      'relax/data_utils.py'),
                                  'relax.data_utils.IdentityTransformation': ( 'data.utils.html#identitytransformation',
                                                                               'relax/data_utils.py'),
                                  'relax.data_utils.IdentityTransformation.__init__': ( 'data.utils.html#identitytransformation.__init__',
                                                                                        'relax/data_utils.py'),
                                  'relax.data_utils.IdentityTransformation.apply_constraints': ( 'data.utils.html#identitytransformation.apply_constraints',
                                                                                                 'relax/data_utils.py'),
                                  'relax.data_utils.IdentityTransformation.fit': ( 'data.utils.html#identitytransformation.fit',
                                                                                   'relax/data_utils.py'),
                                  'relax.data_utils.IdentityTransformation.fit_transform': ( 'data.utils.html#identitytransformation.fit_transform',
                                                                                             'relax/data_utils.py'),
                                  'relax.data_utils.IdentityTransformation.from_dict': ( 'data.utils.html#identitytransformation.from_dict',
                                                                                         'relax/data_utils.py'),
                                  'relax.data_utils.IdentityTransformation.to_dict': ( 'data.utils.html#identitytransformation.to_dict',
                                                                                       'relax/data_utils.py'),
                                  'relax.data_utils.IdentityTransformation.transform': ( 'data.utils.html#identitytransformation.transform',
                                                                                         'relax/data_utils.py'),
                                  'relax.data_utils.MinMaxScaler': ('data.utils.html#minmaxscaler', 'relax/data_utils.py'),
                                  'relax.data_utils.MinMaxScaler.fit': ('data.utils.html#minmaxscaler.fit', 'relax/data_utils.py'),
                                  'relax.data_utils.MinMaxScaler.from_dict': ( 'data.utils.html#minmaxscaler.from_dict',
                                                                               'relax/data_utils.py'),
                                  'relax.data_utils.MinMaxScaler.inverse_transform': ( 'data.utils.html#minmaxscaler.inverse_transform',
                                                                                       'relax/data_utils.py'),
                                  'relax.data_utils.MinMaxScaler.to_dict': ('data.utils.html#minmaxscaler.to_dict', 'relax/data_utils.py'),
                                  'relax.data_utils.MinMaxScaler.transform': ( 'data.utils.html#minmaxscaler.transform',
                                                                               'relax/data_utils.py'),
                                  'relax.data_utils.MinMaxTransformation': ('data.utils.html#minmaxtransformation', 'relax/data_utils.py'),
                                  'relax.data_utils.MinMaxTransformation.__init__': ( 'data.utils.html#minmaxtransformation.__init__',
                                                                                      'relax/data_utils.py'),
                                  'relax.data_utils.MinMaxTransformation.apply_constraints': ( 'data.utils.html#minmaxtransformation.apply_constraints',
                                                                                               'relax/data_utils.py'),
                                  'relax.data_utils.OneHotEncoder': ('data.utils.html#onehotencoder', 'relax/data_utils.py'),
                                  'relax.data_utils.OneHotEncoder.fit': ('data.utils.html#onehotencoder.fit', 'relax/data_utils.py'),
                                  'relax.data_utils.OneHotEncoder.inverse_transform': ( 'data.utils.html#onehotencoder.inverse_transform',
                                                                                        'relax/data_utils.py'),
                                  'relax.data_utils.OneHotEncoder.transform': ( 'data.utils.html#onehotencoder.transform',
                                                                                'relax/data_utils.py'),
                                  'relax.data_utils.OneHotTransformation': ('data.utils.html#onehottransformation', 'relax/data_utils.py'),
                                  'relax.data_utils.OneHotTransformation.__init__': ( 'data.utils.html#onehottransformation.__init__',
                                                                                      'relax/data_utils.py'),
                                  'relax.data_utils.OneHotTransformation.apply_constraints': ( 'data.utils.html#onehottransformation.apply_constraints',
                                                                                               'relax/data_utils.py'),
                                  'relax.data_utils.OneHotTransformation.categories': ( 'data.utils.html#onehottransformation.categories',
                                                                                        'relax/data_utils.py'),
                                  'relax.data_utils.OrdinalPreprocessor': ('data.utils.html#ordinalpreprocessor', 'relax/data_utils.py'),
                                  'relax.data_utils.OrdinalPreprocessor.fit': ( 'data.utils.html#ordinalpreprocessor.fit',
                                                                                'relax/data_utils.py'),
                                  'relax.data_utils.OrdinalPreprocessor.inverse_transform': ( 'data.utils.html#ordinalpreprocessor.inverse_transform',
                                                                                              'relax/data_utils.py'),
                                  'relax.data_utils.OrdinalPreprocessor.transform': ( 'data.utils.html#ordinalpreprocessor.transform',
                                                                                      'relax/data_utils.py'),
                                  'relax.data_utils.OrdinalTransformation': ( 'data.utils.html#ordinaltransformation',
                                                                              'relax/data_utils.py'),
                                  'relax.data_utils.OrdinalTransformation.__init__': ( 'data.utils.html#ordinaltransformation.__init__',
                                                                                       'relax/data_utils.py'),
                                  'relax.data_utils.OrdinalTransformation.categories': ( 'data.utils.html#ordinaltransformation.categories',
                                                                                         'relax/data_utils.py'),
                                  'relax.data_utils.Transformation': ('data.utils.html#transformation', 'relax/data_utils.py'),
                                  'relax.data_utils.Transformation.__init__': ( 'data.utils.html#transformation.__init__',
                                                                                'relax/data_utils.py'),
                                  'relax.data_utils.Transformation.apply_constraints': ( 'data.utils.html#transformation.apply_constraints',
                                                                                         'relax/data_utils.py'),
                                  'relax.data_utils.Transformation.fit': ('data.utils.html#transformation.fit', 'relax/data_utils.py'),
                                  'relax.data_utils.Transformation.fit_transform': ( 'data.utils.html#transformation.fit_transform',
                                                                                     'relax/data_utils.py'),
                                  'relax.data_utils.Transformation.from_dict': ( 'data.utils.html#transformation.from_dict',
                                                                                 'relax/data_utils.py'),
                                  'relax.data_utils.Transformation.inverse_transform': ( 'data.utils.html#transformation.inverse_transform',
                                                                                         'relax/data_utils.py'),
                                  'relax.data_utils.Transformation.to_dict': ( 'data.utils.html#transformation.to_dict',
                                                                               'relax/data_utils.py'),
                                  'relax.data_utils.Transformation.transform': ( 'data.utils.html#transformation.transform',
                                                                                 'relax/data_utils.py'),
                                  'relax.data_utils._check_xs': ('data.utils.html#_check_xs', 'relax/data_utils.py'),
                                  'relax.data_utils._is_array': ('data.utils.html#_is_array', 'relax/data_utils.py'),
                                  'relax.data_utils._unique': ('data.utils.html#_unique', 'relax/data_utils.py'),
                                  'relax.data_utils.load_pytree': ('data.utils.html#load_pytree', 'relax/data_utils.py'),
                                  'relax.data_utils.save_pytree': ('data.utils.html#save_pytree', 'relax/data_utils.py')},
            'relax.docs': { 'relax.docs.CustomizedMarkdownRenderer': ('docs.html#customizedmarkdownrenderer', 'relax/docs.py'),
                            'relax.docs.CustomizedMarkdownRenderer.__init__': ( 'docs.html#customizedmarkdownrenderer.__init__',
                                                                                'relax/docs.py'),
                            'relax.docs.CustomizedMarkdownRenderer._check_sym': ( 'docs.html#customizedmarkdownrenderer._check_sym',
                                                                                  'relax/docs.py'),
                            'relax.docs.CustomizedMarkdownRenderer._repr_markdown_': ( 'docs.html#customizedmarkdownrenderer._repr_markdown_',
                                                                                       'relax/docs.py'),
                            'relax.docs.CustomizedMarkdownRenderer.hook_methods': ( 'docs.html#customizedmarkdownrenderer.hook_methods',
                                                                                    'relax/docs.py'),
                            'relax.docs.ListDocment': ('docs.html#listdocment', 'relax/docs.py'),
                            'relax.docs.ListDocment.__init__': ('docs.html#listdocment.__init__', 'relax/docs.py'),
                            'relax.docs.ListDocment._repre_mardown': ('docs.html#listdocment._repre_mardown', 'relax/docs.py'),
                            'relax.docs.ParserMarkdownRenderer': ('docs.html#parsermarkdownrenderer', 'relax/docs.py'),
                            'relax.docs.ParserMarkdownRenderer.__init__': ('docs.html#parsermarkdownrenderer.__init__', 'relax/docs.py'),
                            'relax.docs._bold': ('docs.html#_bold', 'relax/docs.py'),
                            'relax.docs._docment_parser': ('docs.html#_docment_parser', 'relax/docs.py'),
                            'relax.docs._fmt_sig': ('docs.html#_fmt_sig', 'relax/docs.py'),
                            'relax.docs._inner_list2mdlist': ('docs.html#_inner_list2mdlist', 'relax/docs.py'),
                            'relax.docs._italic': ('docs.html#_italic', 'relax/docs.py'),
                            'relax.docs._params_mdlist': ('docs.html#_params_mdlist', 'relax/docs.py'),
                            'relax.docs._repr_markdown': ('docs.html#_repr_markdown', 'relax/docs.py'),
                            'relax.docs._return_mdlist': ('docs.html#_return_mdlist', 'relax/docs.py'),
                            'relax.docs._show_param': ('docs.html#_show_param', 'relax/docs.py'),
                            'relax.docs._show_params_return': ('docs.html#_show_params_return', 'relax/docs.py')},
            'relax.import_essentials': {},
            'relax.methods.base': { 'relax.methods.base.CFModule': ('methods/base.html#cfmodule', 'relax/methods/base.py'),
                                    'relax.methods.base.CFModule.__init__': ( 'methods/base.html#cfmodule.__init__',
                                                                              'relax/methods/base.py'),
                                    'relax.methods.base.CFModule.apply_constraints': ( 'methods/base.html#cfmodule.apply_constraints',
                                                                                       'relax/methods/base.py'),
                                    'relax.methods.base.CFModule.apply_regularization': ( 'methods/base.html#cfmodule.apply_regularization',
                                                                                          'relax/methods/base.py'),
                                    'relax.methods.base.CFModule.generate_cf': ( 'methods/base.html#cfmodule.generate_cf',
                                                                                 'relax/methods/base.py'),
                                    'relax.methods.base.CFModule.init_apply_fns': ( 'methods/base.html#cfmodule.init_apply_fns',
                                                                                    'relax/methods/base.py'),
                                    'relax.methods.base.ParametricCFModule': ( 'methods/base.html#parametriccfmodule',
                                                                               'relax/methods/base.py'),
                                    'relax.methods.base.default_apply_constraints_fn': ( 'methods/base.html#default_apply_constraints_fn',
                                                                                         'relax/methods/base.py'),
                                    'relax.methods.base.default_apply_regularization_fn': ( 'methods/base.html#default_apply_regularization_fn',
                                                                                            'relax/methods/base.py')},
            'relax.methods.vanilla': { 'relax.methods.vanilla.VanillaCF': ('methods/vanilla.html#vanillacf', 'relax/methods/vanilla.py'),
                                       'relax.methods.vanilla.VanillaCF.__init__': ( 'methods/vanilla.html#vanillacf.__init__',
                                                                                     'relax/methods/vanilla.py'),
                                       'relax.methods.vanilla.VanillaCF.generate_cf': ( 'methods/vanilla.html#vanillacf.generate_cf',
                                                                                        'relax/methods/vanilla.py'),
                                       'relax.methods.vanilla.VanillaCFConfig': ( 'methods/vanilla.html#vanillacfconfig',
                                                                                  'relax/methods/vanilla.py'),
                                       'relax.methods.vanilla._vanilla_cf': ( 'methods/vanilla.html#_vanilla_cf',
                                                                              'relax/methods/vanilla.py')},
            'relax.ml_model': { 'relax.ml_model.MLModule': ('ml_model.html#mlmodule', 'relax/ml_model.py'),
                                'relax.ml_model.MLModule.__init__': ('ml_model.html#mlmodule.__init__', 'relax/ml_model.py'),
                                'relax.ml_model.MLModule._init_model': ('ml_model.html#mlmodule._init_model', 'relax/ml_model.py'),
                                'relax.ml_model.MLModule.is_trained': ('ml_model.html#mlmodule.is_trained', 'relax/ml_model.py'),
                                'relax.ml_model.MLModule.load_from_path': ('ml_model.html#mlmodule.load_from_path', 'relax/ml_model.py'),
                                'relax.ml_model.MLModule.pred_fn': ('ml_model.html#mlmodule.pred_fn', 'relax/ml_model.py'),
                                'relax.ml_model.MLModule.save': ('ml_model.html#mlmodule.save', 'relax/ml_model.py'),
                                'relax.ml_model.MLModule.train': ('ml_model.html#mlmodule.train', 'relax/ml_model.py'),
                                'relax.ml_model.MLModuleConfig': ('ml_model.html#mlmoduleconfig', 'relax/ml_model.py'),
                                'relax.ml_model.MLP': ('ml_model.html#mlp', 'relax/ml_model.py'),
                                'relax.ml_model.MLP.__init__': ('ml_model.html#mlp.__init__', 'relax/ml_model.py'),
                                'relax.ml_model.MLP.call': ('ml_model.html#mlp.call', 'relax/ml_model.py'),
                                'relax.ml_model.MLP.get_config': ('ml_model.html#mlp.get_config', 'relax/ml_model.py'),
                                'relax.ml_model.MLPBlock': ('ml_model.html#mlpblock', 'relax/ml_model.py'),
                                'relax.ml_model.MLPBlock.__init__': ('ml_model.html#mlpblock.__init__', 'relax/ml_model.py'),
                                'relax.ml_model.MLPBlock.build': ('ml_model.html#mlpblock.build', 'relax/ml_model.py'),
                                'relax.ml_model.MLPBlock.call': ('ml_model.html#mlpblock.call', 'relax/ml_model.py'),
                                'relax.ml_model.download_ml_module': ('ml_model.html#download_ml_module', 'relax/ml_model.py'),
                                'relax.ml_model.load_ml_module': ('ml_model.html#load_ml_module', 'relax/ml_model.py')},
            'relax.utils': { 'relax.utils.Config': ('utils.html#config', 'relax/utils.py'),
                             'relax.utils.Config.default': ('utils.html#config.default', 'relax/utils.py'),
                             'relax.utils._reshape_x': ('utils.html#_reshape_x', 'relax/utils.py'),
                             'relax.utils.auto_reshaping': ('utils.html#auto_reshaping', 'relax/utils.py'),
                             'relax.utils.get_config': ('utils.html#get_config', 'relax/utils.py'),
                             'relax.utils.grad_update': ('utils.html#grad_update', 'relax/utils.py'),
                             'relax.utils.load_json': ('utils.html#load_json', 'relax/utils.py'),
                             'relax.utils.validate_configs': ('utils.html#validate_configs', 'relax/utils.py')}}}
